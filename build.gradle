plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Cloth Config
    maven {
        url "https://maven.shedaniel.me/"
    }

    // Cloth Config
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }

    // Spell Power, Spell Engine, Mana Attributes, Stamina Attributes, Overhauled Damage, Health Regeneration Overhaul
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

    // Tiny Config
    maven {
        url 'https://jitpack.io'
    }

    // Player Animator
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }

}

loom {
    splitEnvironmentSourceSets()

    mods {
        "modid" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Cloth Config
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}")

    // Player Animation Lib
    modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim}")

    // Spell Engine
    modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}")

    // Spell Power
    modImplementation("maven.modrinth:spell-power:${project.spell_power_version}")

    // Tiny Config
    modImplementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")

    // Mana Attributes
    modImplementation "maven.modrinth:mana-attributes:${project.mana_attributes}"

    // Stamina Attributes
    modImplementation "maven.modrinth:stamina-attributes:${project.stamina_attributes}"

    // Overhauled Damage
    modImplementation "maven.modrinth:overhauled-damage:${project.overhauled_damage_version}"

    // Health Regeneration Overhaul
    modImplementation "maven.modrinth:health-regeneration-overhaul:${project.health_regeneration_overhaul_version}"

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

import com.modrinth.minotaur.dependencies.ModDependency

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = 'wLmM53ED' // The ID of your Modrinth project. Slugs will not work.
    versionNumber = mod_version
    versionType = "beta" // can also be "beta" or "alpha"
    uploadFile = remapJar
    gameVersions = ['1.20.1'] // An array of game versions the version supports
    loaders = ['fabric']
    dependencies = [
            new ModDependency('P7dR8mSH', 'required'), // Fabric API
            new ModDependency('XvoWJaA2', 'required'), // SpellEngine
            new ModDependency('ckXJT3cX', 'required'), // Health Regeneration Overhaul
            new ModDependency('1uXUV3Qn', 'required'), // Mana Attributes
            new ModDependency('OifMIGuH', 'required'), // Overhauled Damage
            new ModDependency('QKOE26gD', 'required') // Stamina Attributes
    ]
    changelog = "${update_changelog}"
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}